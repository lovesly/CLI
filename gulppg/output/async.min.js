"use strict";function asyncGeneratorStep(e,r,t,n,s,i,a){try{var u=e[i](a),c=u.value}catch(e){return void t(e)}u.done?r(c):Promise.resolve(c).then(n,s)}function _asyncToGenerator(u){return function(){var e=this,a=arguments;return new Promise(function(r,t){var n=u.apply(e,a);function s(e){asyncGeneratorStep(n,r,t,s,i,"next",e)}function i(e){asyncGeneratorStep(n,r,t,s,i,"throw",e)}s(void 0)})}}var _require=require("gulp"),src=_require.src,dest=_require.dest,_require2=require("events"),EventEmitter=_require2.EventEmitter,_require3=require("child_process"),exec=_require3.exec,fs=require("fs");function streamTask(){return src("*.js").pipe(dest("output"))}function PromiseTask(){return Promise.resolve("Value is resolved!")}function eventEmitterTask(){var e=new EventEmitter;return setTimeout(function(){e.emit("finish")},250),e}function childProcessTask(){return exec("data")}function callbackTask(e){e()}function passingCallback(e){fs.access("gulpfile.js",e)}function asyncAwaitTask(){return _asyncAwaitTask.apply(this,arguments)}function _asyncAwaitTask(){return(_asyncAwaitTask=_asyncToGenerator(regeneratorRuntime.mark(function e(){var r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r=fs.readFileSync("package.json"),r.version,e.next=3,Promise.resolve("some result");case 3:case"end":return e.stop()}},e)}))).apply(this,arguments)}